# RISC-V code using provided instructions

li x2, 5
li x3, 3
li x5, 2
li x7, 9
li x8, 1
li x10, 19

add x1, x2, x3

# Add an immediate to a register and store in another register
addi x4, x5, 10

# Bitwise AND two registers and store in a third register
and x6, x7, x8

# Jump to a label with a computed address
auipc x9, 10       # load upper 20 bits of address
jal x9, label2     # jump to label2 using computed address

label2:
    # Compare two registers and branch to a label if they are equal
    beq x10, x11, label3

    # Compare two registers and branch to a label if the first is less than or equal to the second
    bge x12, x13, label4

    # Compare two registers unsigned and branch to a label if the first is greater than or equal to the second
    bgeu x14, x15, label5

    # Compare two registers and branch to a label if the first is less than the second
    blt x16, x17, label6

    # Compare two registers unsigned and branch to a label if the first is less than the second
    bltu x18, x19, label7

    # Compare two registers and branch to a label if they are not equal
    bne x20, x21, label8

    # Jump to a label with a computed address using a register
    jalr x22, x23, 8
    
exit:
    # terminate
    ecall

label3:
    # Code to execute if x10 equals x11
    add x26, x27, x28
    beq x0, x0, exit

label4:
    # Code to execute if x12 is greater than or equal to x13
    addi x29, x30, 5
    beq x0, x0, exit

label5:
    # Code to execute if x14 is less than or equal to x15
    add x31, x3, x3
    beq x0, x0, exit

label6:
    # Code to execute if x16 is less than x17
    addi x4, x5, -1
    beq x0, x0, exit

label7:
    # Code to execute if x18 is less than x19
    add x6, x7, x8
    beq x0, x0, exit

label8:
    # Code to execute if x20 does not equal x21
    addi x9, x4, -10
    beq x0, x0, exit

